generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String    @id @default(uuid())
  name      String
  userId    String
  products  Product[] @relation("StoreToProduct")
  orders    Order[]   @relation("StoreToOrder")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String      @id @default(uuid())
  storeId     String // Foreign Key to Store
  store       Store       @relation("StoreToProduct", fields: [storeId], references: [id])
  photo       Photo[] // Relation to Image model
  name        String
  sku         String      @default("N/A")
  description String      @db.VarChar(600)
  price       Decimal
  discount    Decimal
  totalPrice  Decimal
  quantity    Decimal
  category    String
  sizes       String
  OrderItem   OrderItem[]
  isArchived  Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([storeId])
}

model Photo {
  id        String   @id @default(uuid())
  productId String // Foreign Key to Product
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String // URL of the image
  key       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Order {
  id         String      @id @default(uuid())
  storeId    String // Foreign Key to Store
  store      Store       @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[] // Relation to OrderItem model
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([storeId])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String // Foreign Key to Store
  Order     Order   @relation(fields: [orderId], references: [id])
  productId String // Foreign Key to Store
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}
